{"ast":null,"code":"var _jsxFileName = \"/Users/regina/Work/Current projects/regina-nigma/src/common/header/Darkmode.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Darkmode = () => {\n  let clickedClass = 'clicked';\n  const body = document.body;\n  const lightTheme = \"light\";\n  const darkTheme = \"dark\";\n  let theme;\n\n  if (localStorage) {\n    theme = localStorage.getItem(\"theme\");\n  }\n\n  if (theme === darkTheme || theme === lightTheme) {\n    body.classList.add(theme);\n  } else {\n    body.classList.add(darkTheme);\n  }\n\n  const switchTheme = e => {\n    if (theme === lightTheme) {\n      body.classList.replace(lightTheme, darkTheme);\n      e.target.classList.remove(clickedClass);\n      localStorage.setItem(\"theme\", \"dark\");\n      theme = darkTheme;\n    } else {\n      body.classList.replace(darkTheme, lightTheme);\n      e.target.classList.add(clickedClass);\n      localStorage.setItem(\"theme\", \"dark\");\n      theme = lightTheme;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: theme === \"light\" ? clickedClass : \"\",\n    id: \"darkmode\",\n    onClick: e => switchTheme(e),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"light-icon\",\n      src: `${process.env.PUBLIC_URL}/images/icons/sun-01.svg`,\n      alt: \"Sun images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"dark-icon\",\n      src: `${process.env.PUBLIC_URL}/images/icons/vector.svg`,\n      alt: \"Sun images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Darkmode;\nexport default Darkmode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Darkmode\");","map":{"version":3,"sources":["/Users/regina/Work/Current projects/regina-nigma/src/common/header/Darkmode.js"],"names":["React","Darkmode","clickedClass","body","document","lightTheme","darkTheme","theme","localStorage","getItem","classList","add","switchTheme","e","replace","target","remove","setItem","process","env","PUBLIC_URL"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,MAAIC,YAAY,GAAG,SAAnB;AACA,QAAMC,IAAI,GAAGC,QAAQ,CAACD,IAAtB;AACA,QAAME,UAAU,GAAG,OAAnB;AACA,QAAMC,SAAS,GAAG,MAAlB;AACA,MAAIC,KAAJ;;AACA,MAAIC,YAAJ,EAAkB;AACdD,IAAAA,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAR;AACH;;AACD,MAAIF,KAAK,KAAKD,SAAV,IAAuBC,KAAK,KAAKF,UAArC,EAAiD;AAC7CF,IAAAA,IAAI,CAACO,SAAL,CAAeC,GAAf,CAAmBJ,KAAnB;AACH,GAFD,MAEM;AACFJ,IAAAA,IAAI,CAACO,SAAL,CAAeC,GAAf,CAAmBL,SAAnB;AACH;;AACD,QAAMM,WAAW,GAAIC,CAAD,IAAO;AACvB,QAAIN,KAAK,KAAKF,UAAd,EAA0B;AACtBF,MAAAA,IAAI,CAACO,SAAL,CAAeI,OAAf,CAAuBT,UAAvB,EAAmCC,SAAnC;AACAO,MAAAA,CAAC,CAACE,MAAF,CAASL,SAAT,CAAmBM,MAAnB,CAA0Bd,YAA1B;AACAM,MAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8B,MAA9B;AACAV,MAAAA,KAAK,GAAGD,SAAR;AACH,KALD,MAKM;AACFH,MAAAA,IAAI,CAACO,SAAL,CAAeI,OAAf,CAAuBR,SAAvB,EAAkCD,UAAlC;AACAQ,MAAAA,CAAC,CAACE,MAAF,CAASL,SAAT,CAAmBC,GAAnB,CAAuBT,YAAvB;AACAM,MAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8B,MAA9B;AACAV,MAAAA,KAAK,GAAGF,UAAR;AACH;AACJ,GAZD;;AAaA,sBACI;AAAQ,IAAA,SAAS,EAAEE,KAAK,KAAK,OAAV,GAAoBL,YAApB,GAAmC,EAAtD;AACA,IAAA,EAAE,EAAC,UADH;AAEA,IAAA,OAAO,EAAGW,CAAD,IAAOD,WAAW,CAACC,CAAD,CAF3B;AAAA,4BAKG;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,GAAG,EAAG,GAAEK,OAAO,CAACC,GAAR,CAAYC,UAAW,0BAA3D;AAAsF,MAAA,GAAG,EAAC;AAA1F;AAAA;AAAA;AAAA;AAAA,YALH,eAMG;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAG,GAAEF,OAAO,CAACC,GAAR,CAAYC,UAAW,0BAA1D;AAAqF,MAAA,GAAG,EAAC;AAAzF;AAAA;AAAA;AAAA;AAAA,YANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CArCD;;KAAMnB,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\n\r\nconst Darkmode = () => {\r\n    let clickedClass = 'clicked';\r\n    const body = document.body;\r\n    const lightTheme = \"light\";\r\n    const darkTheme = \"dark\";\r\n    let theme;\r\n    if (localStorage) {\r\n        theme = localStorage.getItem(\"theme\")\r\n    }\r\n    if (theme === darkTheme || theme === lightTheme) {\r\n        body.classList.add(theme)\r\n    }else {\r\n        body.classList.add(darkTheme)\r\n    }\r\n    const switchTheme = (e) => {\r\n        if (theme === lightTheme) {\r\n            body.classList.replace(lightTheme, darkTheme);\r\n            e.target.classList.remove(clickedClass);\r\n            localStorage.setItem(\"theme\", \"dark\");\r\n            theme = darkTheme;\r\n        }else {\r\n            body.classList.replace(darkTheme, lightTheme);\r\n            e.target.classList.add(clickedClass);\r\n            localStorage.setItem(\"theme\", \"dark\");\r\n            theme = lightTheme;\r\n        }\r\n    }\r\n    return (\r\n        <button className={theme === \"light\" ? clickedClass : \"\"} \r\n        id=\"darkmode\"\r\n        onClick={(e) => switchTheme(e)}\r\n        >\r\n\r\n           <img className=\"light-icon\" src={`${process.env.PUBLIC_URL}/images/icons/sun-01.svg`} alt=\"Sun images\" />\r\n           <img className=\"dark-icon\" src={`${process.env.PUBLIC_URL}/images/icons/vector.svg`} alt=\"Sun images\" />\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Darkmode\r\n"]},"metadata":{},"sourceType":"module"}